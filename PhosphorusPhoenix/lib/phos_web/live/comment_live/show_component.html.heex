<div class="comment" id={"comment-#{elem(@comment, 1).id}"}>
  <a class="avatar">
    <img src={ Phos.Orbject.S3.get!("USR", elem(@comment, 1).initiator_id, "public/profile/lossy") }>
  </a>
  <div class="content">
    <a class="author"><%= elem(@comment, 1).initiator.username %></a>
    <div class="metadata">
      <span class="date"><%= elem(@comment, 1).inserted_at %></span>
    </div>
    <div class="text">
      <p>CID: <%= elem(@comment, 1).id%></p>
      <p :if={elem(@comment, 1).active and is_nil(@edit_comment)}><%= elem(@comment, 1).body %></p>
      <.live_component :if={not is_nil(@edit_comment)} module={PhosWeb.CommentLive.FormComponent}
        changeset={@changeset}
        current_user={@current_user}
        comment={elem(@comment, 1)}
        reply_comment={nil}
        edit_comment={@edit_comment}
        orb={@orb}
        text="Edit comment"
        target={"#comment-#{elem(@comment, 1).id}"}
        id={"edit-comment-#{elem(@comment, 1).id}"}
        action={:edit} />

      <div :if={not elem(@comment, 1).active}>
        <p><i>-- Comment deleted --</i></p>
        <details>
          <summary>view deleted comment</summary>
          <%= elem(@comment, 1).body %>
        </details>
      </div>
    </div>
    <div class="actions">
      <.link href="#reply" phx-click="reply-comment" phx-value-comment-id={elem(@comment, 1).id} phx-target={"#comment-#{elem(@comment, 1).id}"}>Reply</.link>
      <.link :if={elem(@comment, 1).active } href="#edit" phx-click="edit-comment" phx-value-comment-id={elem(@comment, 1).id} phx-target={"#comment-#{elem(@comment, 1).id}"}>Edit</.link>
      <.link :if={elem(@comment, 1).active } phx-click={JS.push("delete", value: %{id: elem(@comment, 1).id})} data-confirm="Are you sure?">Delete</.link>

      <div :if={elem(@comment, 1).child_count > 0}>
        <div id={"showreply-#{elem(@comment, 1).id}"} style="display: none">
          <.link
            href="#"
            phx-click={
              JS.push("toggle_more_replies")
              |> JS.toggle(to: "#morereplies-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#morereplies-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#showreply-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#hidereply-#{elem(@comment, 1).id}")}
            phx-value-initmorecomments="false"
            phx-value-orb={@orb.id}
            phx-value-path={to_string(elem(@comment, 1).path)}>
              Show replies [<%= elem(@comment, 1).child_count %>]
          </.link>
        </div>
        <div id={"hidereply-#{elem(@comment, 1).id}"} style="display: none">
          <.link
            href="#"
            phx-click={
              JS.push("toggle_more_replies")
              |> JS.toggle(to: "#morereplies-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#morereplies-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#hidereply-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#showreply-#{elem(@comment, 1).id}")
            }
            phx-value-initmorecomments="false"
            phx-value-orb={@orb.id}
            phx-value-path={to_string(elem(@comment, 1).path)}>
              Hide replies  [<%= elem(@comment, 1).child_count %>]
          </.link>
        </div>
        <div id={"initshowreply-#{elem(@comment, 1).id}"} >
          <.link
            href="#"
            phx-click={
              JS.push("toggle_more_replies")
              |> JS.toggle(to: "#initshowreply-#{elem(@comment, 1).id}")
              |> JS.toggle(to: "#hidereply-#{elem(@comment, 1).id}")
            }
            phx-value-initmorecomments="true"
            phx-value-orb={@orb.id}
            phx-value-path={to_string(elem(@comment, 1).path)}>
                Show replies [<%= elem(@comment, 1).child_count %>]
          </.link>
        </div>
      </div>
    </div>

    <div :if={not is_nil(@reply_comment)} id={"reply-comment-for-#{elem(@comment, 1).id}"}>
      <.live_component module={PhosWeb.CommentLive.FormComponent}
        changeset={@changeset}
        current_user={@current_user}
        comment={elem(@comment, 1)}
        reply_comment={elem(@comment, 1).id}
        orb={@orb}
        text="Reply comment"
        target={"#comment-#{elem(@comment, 1).id}"}
        id={"create-child-comment-#{elem(@comment, 1).id}"}
        action={:reply} />
    </div>
  </div>

  <div class="comments" id={"morereplies-#{elem(@comment, 1).id}"}>
    <.live_component
      :for={comment <- filter_child_comments_chrono(@comments, @comment)}
      module={__MODULE__}
      comment={comment}
      id={"comment-#{elem(comment, 1).id}"}
      comments={@comments}
      changeset={@changeset}
      orb={@orb}
      current_user={@current_user}
      socket={@socket}
      reply_comment={nil}
      phx-target={"#comment-#{elem(comment, 1).id}"}
      />
  </div>
</div>
