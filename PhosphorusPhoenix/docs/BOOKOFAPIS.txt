# -*- restclient -*-
# Phos API Endpoint Documentation

:ipAddress = http://localhost:4000/api
#:ipAddress = https://nyx.scrb.ac/api
:localipAddress = http://localhost:4000/api
:princeton=0b3gd5XUGtNP6lqQean4IAp7ogG3
:satrio=BX1BxM9KkwdFmy2J4FNNkFxclpS2
:owen=0ErhlIM10Maldn1qVMGOJMKu6J92
:bala=fFKlWcfV9RRavNZJUxt46BLYB5n1
:tate=FbXQKufaWFOUNIsVYsn5tdW1qUc2
:jean=HMhn3DPO71h0cMYFh52vM1tBacX2
:anon=ETCiVo6Rr3gniuI44Gq9f2a5Ldl1
:javier=v78yYQpVjlUaOsmzKguPoXcGqqw2
:jiayi=Zb2yO0VthIgN8207z3wmEo3KPEh1
:princeton_id=9bf9c443-f89b-460a-972d-6704ae66823d
:owentwo_id=973da4ae-48a6-498d-b988-548af3af99f6
:satrio_id=b3cd35ef-83e2-448e-831d-f5ded1c39692
:satrio_id=5c82aeea-7c2b-4a97-a80b-d5b728c4ee86
:phong_id=f8ed10b7-147e-4864-9525-bcf49c457dfc
:satrioremote_id=5972b8e6-319b-4bf4-95cf-f58fb2117e21
:brandon_id=b556571a-362e-4017-9894-f1eed0b39794
:lky_id=6d7b0e7c-a633-4a8a-8d85-b8a493109bd4
:antoine_id=3d534547-eed2-4ab2-acc8-ebf0ae03aaa5
#:lky_id=4b2d6d8d-7781-4a20-b868-b0e0db245b85
:aang_id=58c146d2-407f-49d5-a74d-0d9362e73be9
:zuko_id=6f6c7d30-4447-4687-8fb9-f95a2de82957
:owen_id=233e50b1-5507-4a3c-96a7-b6339e8d27f4
:tate_id=5e7ed96c-f444-43e5-96e9-fe44bba1a664
:fcm=dLZMhagGRxq4Hf4W317OYn:APA91bGU1F3v0buosL5N8mVOrlPS2byiDygytKZIrZseDndXFFROsbfep-Ux7hCLsy5kv0MFTBTMmCz98lrI18ICWhWr_N81jae_05ubab-qgDptsUEpl-x5BugJZgZlzgqIQUtRv0GU
:raiz_fcm=f3vM3sCxR76eSaJS0pYwFm:APA91bEqiK7GJvjdKoWWd3A7spQnJFLgJY8rRilnuW9d7IJZHzJ3f3VZbqDwgg5zlwidWw82PTZTeMhEDPc2CwpILM4OQK--6xxYAN1uhR1-5stVeCr5YOZSh0uNhKHdiEpRXtmC-58i
:rel=9bb7ad28-3caa-49fa-a314-fc9ca8093f27
:auth-headers = <<
Authorization: :token
Content-Type: application/json
User-Agent: Emacs27
##
##
:headers = <<
Content-Type: application/json
User-Agent: Emacs27
##
## Generate Client-side JWT
GET :localipAddress/devland/flameon?user=:lky_id
-> run-hook (restclient-set-var ":token" (cdr (assq 'payload (json-read))))

## Generate Google Identity idToken for Firebase Auth
GET :localipAddress/devland/lankaonfyr?fyr_id=:jiayi
-> run-hook (restclient-set-var ":fyr_token" (cdr (assq 'payload (json-read))))


## ! Userland Calls
## Translate Firebase Token to Client-side JWT
GET :ipAddress/userland/auth/fyr?fyr=:fyr_token
-> run-hook (restclient-set-var ":token" (cdr (assq 'payload (json-read))))
:headers
## Genesis (Create User// Returning User // Migrating User)
POST :ipAddress/userland/auth/fyr/genesis
-> run-hook (restclient-set-var ":token" (cdr (assq 'payload (json-read))))
:headers
{
    "fyr": ":fyr_token"
}

## Read userdata of self
GET :ipAddress/userland/self/
:auth-headers

## Read activities of self
GET :ipAddress/userland/self/activity?cursor=16035029484071
:auth-headers

## Register User via Email
POST :ipAddress/userland/auth/email/register
:auth-headers
{
    "email": "shakyamuni@bo.wen",
    "password": "1234567890-=1"
}

## Login User via Email
POST :ipAddress/userland/auth/email/login
-> run-hook (restclient-set-var ":fyr_token" (cdr (assq 'authn_token (json-read))))
:auth-headers

{
    "email": "vivekbala@scratchbac.com",
    "password": "1234567890-="
}

## Login User via Email
POST :ipAddress/userland/auth/email/confirm_email
:auth-headers

{
    "token": "owenthe@bo.wen"
}
#
# Resend Confirmation
GET :ipAddress/userland/auth/email/resend_confirmation
:auth-headers

## Forgot password for bobos
POST :ipAddress/userland/auth/email/forgot_password
:auth-headers

{
    "email": "owenthe@bo.wen"
}

## Reset Password
POST :ipAddress/userland/auth/email/reset_password
:auth-headers

{
    "token": "I2PwCl1k0haElOuvaJSLCAuTpRQpguHCm0HeeHftghw",
    "password": "1234567890-++",
    "password_confirmation": "1234567890-++"
}

## Update userdata of self
PUT :ipAddress/userland/self/
:auth-headers
{
    "bio": "alberto robotos",
    "username": "kenneth",
    "public_name": "Albert the Robot",
    "birthday": 16123442423,
    "media": [
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless"
        },
        {
            "access": "public",
            "essence": "profile",
            "resolution": "lossy"
        }
    ],
    "traits": [
        "aikido",
        "matrix"
    ],
    "soulorb": {
        "title": "wow",
        "payload": {
            "inner_title": "longer wow"
}},
    "occupation": "bloatwarengingeer",
    "profile_pic": 3
}
## Read userdata of Others Profile
GET :ipAddress/userland/others/:lky_id
:auth-headers
## Read all of User Orb History
GET :ipAddress/userland/others/:satrio_id/history?page=1&traits=personalpin
:auth-headers

## Update territorial data of self 636786611773840255
PUT :ipAddress/userland/self/territory
:auth-headers
{
    "territory": [
        {
            "id": "home",
            "geohash": 627779412520177663,
            "location_description": "Keong Saik"
        },
        {
            "id": "live",
            "geohash": 627779410029711359,
            "location_description": "Bukit Panjang"
        }
    ]
}

## Report User
PUT :ipAddress/userland/others/e4c01173-f944-4d78-993f-bf4c6fb7cb3a/report
:auth-headers
{
    "message": [
    "Inappropriate Content",
    "Spam"
    ]
}

## Update territorial data of self
PUT :ipAddress/userland/self/beacon
:auth-headers
{
    "fcm_token": ":fcm",
    "beacon": {
        "location": {
          "scope": true
          }
    }
}

## ! Folkland Calls
## View others Profile

## List all current Buddies
GET :ipAddress/folkland/friends?page=1
:auth-headers

## List all current Buddies of others
GET :ipAddress/folkland/others/:satrio_id?page=1
:auth-headers

## Orb Stream directed at yourself from friends
GET :ipAddress/folkland/stream/self?page=1
:auth-headers

## Orb Stream directed at yourself from friends
GET :ipAddress/folkland/stream/discovery/614510498785787903,614510497487650815?page=1
:auth-headers

## Show Relation Resource
GET :ipAddress/folkland/friends/58118a48-3f1d-48b7-8d9f-267b7dbace9a
-> run-hook (restclient-set-var ":rel" (cdr (assq 'relation_id (assq 'data (json-read)))))
:auth-headers

## Send connection request
POST :ipAddress/folkland/friends
-> run-hook (restclient-set-var ":rel" (cdr (assq 'relation_id (assq 'data (json-read)))))
:auth-headers
{
    "acceptor_id": ":lky_id",
    "state": "blocked"
}

## Delete Relation Resource (reset everything)
DELETE :ipAddress/folkland/friends/:rel
:auth-headers

## Ended the friendship
PUT :ipAddress/folkland/friends/reject
:auth-headers
{
    "relation_id": "62be6788-7354-4253-9e9b-8ba19ea487b2"
}

## Began the friendship
PUT :ipAddress/folkland/friends/accept
:auth-headers
{
    "relation_id": "b829879d-37f8-47ce-8214-1a18bcb0e0af"
}

## List of requests to you
GET :ipAddress/folkland/self/requests?page=1
:auth-headers

## List of requests from you
GET :ipAddress/folkland/self/pending?page=1
:auth-headers

## List of requests from you
GET :ipAddress/folkland/self/blocked?page=1
:auth-headers

### ! Orbland Calls
## Read Orb
GET :ipAddress/orbland/orbs/:orb
:auth-headers

## Read all orbs in that geohash id
GET :ipAddress/orbland/stream/623517998944845823,628021598572208127?page=1&search=dinosaurs
:auth-headers

## Create Orbs
POST :ipAddress/orbland/orbs
-> run-hook (restclient-set-var ":orb" (cdr (assq 'orb_uuid (assq 'data (json-read)))))
:auth-headers
{
    "geolocation": {
        "central_geohash": 628021598572208127
    },
    "title": "aikido style",
    "inner_title": "Ranged thus for battle on the sacred plain-- On Kurukshetra--say, Sanjaya! say What wrought my people, and the Pandavas?",
    "info": "ba sing se",
    "active": "true",
    "creationtime": 1695263542,
    "media": [
        {
            "access": "public",
            "essence": "banner",
            "count": 0
        },
        {
            "access": "public",
            "essence": "blorb",
            "resolution": "lossless",
            "count": 1
        },
        {
            "access": "public",
            "essence": "blorb",
            "resolution": "lossless",
            "count": 1,
            "ext": "png"
        },
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless",
            "count": 2
        },
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless",
            "count": 3,
            "ext": "mp3"
        },
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless",
            "count": 4
        },
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless",
            "count": 5
        }
        ],
    "expires_in": "10000",
    "traits": ["personalpin"],
    "blorbs": [
        {
            "type": "txt",
            "active": "true",
            "character": {"content": "For him who has conquered the mind, the mind is the best of friends; but for one who has failed to do so, his very mind will be the greatest enemy."}
        },
        {
            "type": "img",
            "active": "true",
            "character": {"count": 1,"ext": "png"}
        }

    ]
}
## Update Orbs (Deactivate etc)
##
PUT :ipAddress/orbland/orbs/:orb
-> run-hook (restclient-set-var ":orb" (cdr (assq 'orb_uuid (assq 'data (json-read)))))
:auth-headers
{
    "geolocation": {
        "central_geohash": 623276216935972863
    },
    "title": "yogafire",
    "inner_title": "stay in the matrix",
    "info": "ba sing se",
    "active": "true",
    "media": [
        {
        "access": "public",
        "essence": "banner",
        "resolution": "lossless"
        }],
    "expires_in": "10000",
    "traits": ["holy", "mooncakes"]
}

## Add Blorb
##
PUT :ipAddress/orbland/orbs/:orb/blorb
-> run-hook (restclient-set-var ":orb" (cdr (assq 'orb_uuid (assq 'data (json-read)))))
:auth-headers
{
    "geolocation": {
        "central_geohash": 623276216935972863
    },
    "title": "yogafire",
    "inner_title": "stay in the matrix",
    "info": "ba sing se",
    "active": "true",
    "media": [
        {
        "access": "public",
        "essence": "banner",
        "resolution": "lossless"
        }],
    "expires_in": "10000",
    "traits": ["holy", "mooncakes"]
}

## Report Orbs
PUT :ipAddress/orbland/orbs/e4c01173-f944-4d78-993f-bf4c6fb7cb3a/report
:auth-headers
{
    "message": [
    "Inappropriate COntent",
    "Spam"
    ]
}
### ! Comments API
## List Comments
GET :ipAddress/orbland/comments/
:auth-headers

## Read Comment
GET :ipAddress/orbland/comments/:commie
:auth-headers

## Update Comment
PUT :ipAddress/orbland/comments/:commie
:auth-headers
{
    "body": "alberto robotos",
    "active": false
}

## Reply to Orb (Create Root Comment)
POST :ipAddress/orbland/comments/
-> run-hook (restclient-set-var ":commie" (cdr (assq 'id (assq 'data (json-read)))))
:auth-headers
{
    "orb_id": ":orb",
    "body": "alberto robotos"
}

## Reply to Comment (Create Child Comment)
POST :ipAddress/orbland/comments/
:auth-headers
-> run-hook (restclient-set-var ":childcommie" (cdr (assq 'id (assq 'data (json-read)))))
{
    "parent_id": ":commie",
    "body": "5"
}

## Create DEEP children Comment
POST :ipAddress/orbland/comments/
:auth-headers
-> run-hook (restclient-set-var ":childcommie" (cdr (assq 'id (assq 'data (json-read)))))
{
    "parent_id": ":childcommie",
    "body": "I Have a secret comment baby"
}

## Show Root Comments for ORB
GET :ipAddress/orbland/comments/root/:orb?page=1
:auth-headers

## Show Ancestors Comment
GET :ipAddress/orbland/comments/ancestor/:commie
:auth-headers

## Show Childrens Comment
GET :ipAddress/orbland/comments/children/:commie?page=1
:auth-headers
## Delete Comment
DELETE :ipAddress/orbland/comments/:commie
:auth-headers


### Memland
## Index by unique relations
GET :ipAddress/memland/friends/?cursor=16813190790
:auth-headers

## Index by unique orbs
GET :ipAddress/memland/orbs/:orb?page=1
:auth-headers

## Index by unique territories
GET :ipAddress/memland/territories/614268611149692927?cursor=1688355938000
:auth-headers

## Show by specific relation_id through cursor
GET :ipAddress/memland/friends/:rel?cursor=1673502948407&asc=false
:auth-headers

## Show message by orbs within a relation
GET :ipAddress/memland/friends/:rel/orbs/?cursor=1773502948407&asc=desc
:auth-headers



## Create Memories
POST :ipAddress/memland/memories
-> run-hook (restclient-set-var ":echo" (cdr (assq 'orb_uuid (assq 'data (json-read)))))
:auth-headers
{
    "message": "14",
    "loc_subject_id": 614554999420092415
}

### Medialand
#POST :ipAddress/medialand/media/USR/:lky_id?wildcard=true
POST :ipAddress/medialand/media/MEM/3408a6bc-eba4-4bdf-b14b-938bf206f2b4?wildcard=true
:auth-headers
{
    "media": [
        {
            "access": "public",
            "essence": "profile",
            "resolution": "lossless"
        },
        {
            "access": "public",
            "essence": "profile",
            "resolution": "lossy"
        }
        ]
}



## Version Check Major.Minor.Patch
GET :ipAddress/version/1.1.4-alpha.1
