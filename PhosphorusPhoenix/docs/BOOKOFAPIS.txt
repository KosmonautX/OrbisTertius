# -*- restclient -*-
# Phos API Endpoint Documentation

:ipAddress = http://localhost:4000/api
# :ipAddress = https://nyx.scrb.ac/api
:localipAddress = http://localhost:4000/api
:princeton=0b3gd5XUGtNP6lqQean4IAp7ogG3
:satrio=BX1BxM9KkwdFmy2J4FNNkFxclpS2
:owen=0ErhlIM10Maldn1qVMGOJMKu6J92
:tate=FbXQKufaWFOUNIsVYsn5tdW1qUc2
:princeton_id=9bf9c443-f89b-460a-972d-6704ae66823d
:owentwo_id=973da4ae-48a6-498d-b988-548af3af99f6
:satrio_id=5c82aeea-7c2b-4a97-a80b-d5b728c4ee86
:satrioremote_id=5972b8e6-319b-4bf4-95cf-f58fb2117e21
:brandon_id=b556571a-362e-4017-9894-f1eed0b39794
:lky_id=3995c7f6-af54-4e31-85ee-3608e16ec00f
:aang_id=58c146d2-407f-49d5-a74d-0d9362e73be9
:zuko_id=6f6c7d30-4447-4687-8fb9-f95a2de82957
:owen_id=233e50b1-5507-4a3c-96a7-b6339e8d27f4
:tate_id=5e7ed96c-f444-43e5-96e9-fe44bba1a664
:fcm=dkoDy7FBSOybPE-juVQBHa:APA91bEdhNYKyZ75kG2ucjehb1Rqbfv69m2UiFGpve8bZS7ZAAMca3LiRmwg6g6JXPTgt35neGOQdGZcBJ_8Y5VVKNCMAIn0KHMJRfBiJZrcC-0VSazm3u6RTUecAUYxPQbLAZV0kRDA
:prince_fcm=ewGVcsOAZ02gmzz9zbCLdo:APA91bGS6WbollBieIKBr9x7JvNzbHkTL2K-ukCbGDvjEYtJBqCoVC2U71jF3OAmwobRYocBGQZ-gVQr2-0Zk6ydjjlHuVf7EOjHdS2zA_TxUWIzvDkaZ0jvROqpLyOuMMqCTxqWs2UA
:auth-headers = <<
Authorization: :token
Content-Type: application/json
User-Agent: Emacs27
##
##
:headers = <<
Content-Type: application/json
User-Agent: Emacs27
##
## Generate Client-side JWT
GET :localipAddress/devland/flameon?user=:satrio_id
-> run-hook (restclient-set-var ":token" (cdr (assq 'payload (json-read))))

## Generate Google Identity idToken for Firebase Auth
GET :localipAddress/devland/lankaonfyr?fyr_id=:tate
-> run-hook (restclient-set-var ":fyr_token" (cdr (assq 'payload (json-read))))


## ! Userland Calls
## Translate Firebase Token to Client-side JWT
GET :ipAddress/userland/auth/fyr?fyr=:fyr_token
-> run-hook (restclient-set-var ":token" (cdr (assq 'payload (json-read))))
:headers
## Genesis (Create User// Returning User // Migrating User)
POST :ipAddress/userland/auth/fyr/genesis
-> run-hook (restclient-set-var ":token" (cdr (assq 'payload (json-read))))
:headers
{
    "fyr": ":fyr_token"
}

## Read userdata of self
GET :ipAddress/userland/self/
:auth-headers

## Update userdata of self
PUT :ipAddress/userland/self/
:auth-headers
{
    "bio": "alberto robotos",
    "username": "tate",
    "public_name": "Albert the Robot",
    "birthday": 16123442423,
    "media": [
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless"
        },
        {
            "access": "public",
            "essence": "profile",
            "resolution": "lossy"
        }
    ],
    "traits": [
        "aikido",
        "matrix"
    ],
    "occupation": "bloatwarengingeer",
    "profile_pic": 3
}
## Read userdata of Others Profile
GET :ipAddress/userland/others/:owentwo_id
:auth-headers
## Read all of User Orb History
GET :ipAddress/userland/others/:satrio_id/history?page=1
:auth-headers

## Update territorial data of self
PUT :ipAddress/userland/self/territory
:auth-headers
{
    "territory": [
        {
            "id": "home",
            "geohash": 628021297666224127,
            "location_description": "Pending road"
        },
        {
            "id": "work",
            "geohash": 627986446952349695
        }
    ]
}

## Update territorial data of self
PUT :ipAddress/userland/self/beacon
:auth-headers
{
    "fcm_token": ":fcm"
}

## ! Folkland Calls
## View others Profile

## List all current Buddies
GET :ipAddress/folkland/friends?page=1
:auth-headers

## List all current Buddies of others
GET :ipAddress/folkland/others/:satrio_id?page=1
:auth-headers

## Orb Stream directed at yourself from friends
GET :ipAddress/folkland/stream/self?page=1
:auth-headers

## Orb Stream directed at yourself from friends
GET :ipAddress/folkland/stream/discovery/614510498785787903,614510497487650815?page=1
:auth-headers

## Send connection request
POST :ipAddress/folkland/friends
:auth-headers
{
    "acceptor_id": ":satrioremote_id"
}

## Delete Relation Resource (reset everything)
DELETE :ipAddress/folkland/friends/98c22a1e-0e84-4f2f-b2e3-eb752c7d7c0c
:auth-headers

## Ended the friendship
PUT :ipAddress/folkland/friends/reject
:auth-headers
{
    "relation_id": "62be6788-7354-4253-9e9b-8ba19ea487b2"
}

## Began the friendship
PUT :ipAddress/folkland/friends/accept
:auth-headers
{
    "relation_id": "b829879d-37f8-47ce-8214-1a18bcb0e0af"
}

## List of requests to you
GET :ipAddress/folkland/self/requests?page=1
:auth-headers

## List of requests from you
GET :ipAddress/folkland/self/pending?page=1
:auth-headers


### ! Orbland Calls
## Read Orb
GET :ipAddress/orbland/orbs/9bf9c443-f89b-460a-972d-6704ae66823d
:auth-headers

## Read all orbs in that geohash id
GET :ipAddress/orbland/stream/614510799689351167,627779412580450303,627986446952349695?page=1&traits=pin
:auth-headers

## Create Orbs
POST :ipAddress/orbland/orbs
-> run-hook (restclient-set-var ":orb" (cdr (assq 'orb_uuid (assq 'data (json-read)))))
:auth-headers
{
    "geolocation": {
        "central_geohash": 628021598572208127
    },
    "title": "aikido style",
    "inner_title": "xcape the matrix",
    "info": "ba sing se",
    "active": "true",
    "media": [
        {
            "access": "public",
            "essence": "banner",
            "resolution": "lossless"
        }],
    "expires_in": "10000",
    "traits": ["holy", "mooncakes"]
}
## Update Orbs (Deactivate etc)
##
PUT :ipAddress/orbland/orbs/:orb
-> run-hook (restclient-set-var ":orb" (cdr (assq 'orb_uuid (assq 'data (json-read)))))
:auth-headers
{
    "geolocation": {
        "central_geohash": 623276216935972863
    },
    "title": "yogafire",
    "inner_title": "stay in the matrix",
    "info": "ba sing se",
    "active": "true",
    "media": [
        {
        "access": "public",
        "essence": "banner",
        "resolution": "lossless"
        }],
    "expires_in": "10000",
    "traits": ["holy", "mooncakes"]
}
### ! Comments API
## List Comments
GET :ipAddress/orbland/comments/
:auth-headers

## Read Comment
GET :ipAddress/orbland/comments/:commie
:auth-headers

## Reply to Orb (Create Root Comment)
POST :ipAddress/orbland/comments/
-> run-hook (restclient-set-var ":commie" (cdr (assq 'id (assq 'data (json-read)))))
:auth-headers
{
    "orb_id": ":orb",
    "body": "alberto robotos"
}

## Reply to Comment (Create Child Comment)
POST :ipAddress/orbland/comments/
:auth-headers
-> run-hook (restclient-set-var ":childcommie" (cdr (assq 'id (assq 'data (json-read)))))
{
    "parent_id": ":commie",
    "body": "I Have a secret comment"
}

## Create DEEP children Comment
POST :ipAddress/orbland/comments/
:auth-headers
-> run-hook (restclient-set-var ":childcommie" (cdr (assq 'id (assq 'data (json-read)))))
{
    "parent_id": ":childcommie",
    "body": "I Have a secret comment baby"
}

## Show Root Comments for ORB
GET :ipAddress/orbland/comments/root/:orb?page=1
:auth-headers

## Show Ancestors Comment
GET :ipAddress/orbland/comments/:orb/ancestor/:commie
:auth-headers

## Show Childrens Comment
GET :ipAddress/orbland/comments/children/:commie?page=1
:auth-headers
## Delete Comment
DELETE :ipAddress/orbland/comments/4f0e37a2-abab-46e8-aeb1-d4520255bf21
:auth-headers


## Version Check Major.Minor.Patch
GET :ipAddress/version/1.1.4-alpha.1
