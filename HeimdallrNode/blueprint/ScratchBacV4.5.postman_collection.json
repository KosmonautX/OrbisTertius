{
	"info": {
		"_postman_id": "e824c81b-2b99-4df4-a7b4-975907a3f451",
		"name": "ScratchBacV4.5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DEV",
			"item": [
				{
					"name": "Decode geohash",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/decode_geohash?geohash=null",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"decode_geohash"
							],
							"query": [
								{
									"key": "geohash",
									"value": "null"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query via PK (DEV)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/query?pk=ORB%231",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"query"
							],
							"query": [
								{
									"key": "orb_uuid",
									"value": "ORB%231",
									"disabled": true
								},
								{
									"key": "pk",
									"value": "ORB%231"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Scan ALL (DEV)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/scan_all?key=ORB",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"scan_all"
							],
							"query": [
								{
									"key": "key",
									"value": "ORB"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Scan all orbs after certain time (DEV)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/all_orbs?date=2020-12-24&time=00:00:00",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"all_orbs"
							],
							"query": [
								{
									"key": "date",
									"value": "2020-12-24"
								},
								{
									"key": "time",
									"value": "00:00:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comments for particular ORB",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/comment?orb_uuid=1",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"comment"
							],
							"query": [
								{
									"key": "orb_uuid",
									"value": "ORB%231",
									"disabled": true
								},
								{
									"key": "orb_uuid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1. Delete orb",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/delete_orb?orb_uuid=9cbdc1ce-3a8e-40df-ba8a-b1e76618429a&user_id=1234&expiry_dt&geohash",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"delete_orb"
							],
							"query": [
								{
									"key": "orb_uuid",
									"value": "9cbdc1ce-3a8e-40df-ba8a-b1e76618429a"
								},
								{
									"key": "user_id",
									"value": "1234"
								},
								{
									"key": "expiry_dt",
									"value": null
								},
								{
									"key": "geohash",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/dev/delete_user?user_id=1234&country_code=65&hp_number=999999999",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"dev",
								"delete_user"
							],
							"query": [
								{
									"key": "user_id",
									"value": "1234"
								},
								{
									"key": "country_code",
									"value": "65"
								},
								{
									"key": "hp_number",
									"value": "999999999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "0. Post ORB w/ latlon",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"user_id\": 1234,\n    \"title\": \"gifting season\",\n    \"info\": \"nil\",\n    \"where\": \"my house\",\n    \"When\": \"now\",\n    \"tip\": \"foc\",\n    \"nature\": 10021000000, \n    \"expires_in\": \"1 month\",\n    \"latlon\": {\n        \"LATITUDE\": 1.351660296,\n        \"LONGITUDE\": 103.75600190000002\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/orb/post_orb",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"orb",
								"post_orb"
							]
						},
						"description": "expires_in: \"1 day\" | \"3 day\" | \"1 week\" | \"1 month\" </br>\nlatlon: { </br>\n&nbsp;&nbsp; &nbsp;&nbsp;    LATITUDE: </br>\n&nbsp;&nbsp; &nbsp;&nbsp;     LONGITUDE: </br>\n} </br>\nuser_id = telegram ID </br>\nusername: string </br>\ntitle: string </br>\ninfo: string </br>\nwhere: string </br>\nwhen: string </br>\ntip: string </br>\ntags: array of strings </br>\nphoto </br>\nnature: 100 OFFER, 200 REQUEST, 300 BROADCAST </br>"
					},
					"response": []
				}
			]
		},
		{
			"name": "comments",
			"item": [
				{
					"name": "check comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/comment/check?orb_uuid=1234abcdef",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"comment",
								"check"
							],
							"query": [
								{
									"key": "orb_uuid",
									"value": "1234abcdef"
								}
							]
						},
						"description": "check if an orb has comments"
					},
					"response": []
				},
				{
					"name": "query comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/comment/query?comment_id=0ea7d4a8-6ce4-4f90-b9ee-72a88d373821",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"comment",
								"query"
							],
							"query": [
								{
									"key": "comment_id",
									"value": "0ea7d4a8-6ce4-4f90-b9ee-72a88d373821"
								}
							]
						},
						"description": "check if a comment has children"
					},
					"response": []
				},
				{
					"name": "get comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/comment/query?parent_id=0ea7d4a8-6ce4-4f90-b9ee-72a88d373821&comment_id=0ea7d4a8-6ce4-4f90-b9ee-72a88d373821",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"comment",
								"query"
							],
							"query": [
								{
									"key": "parent_id",
									"value": "0ea7d4a8-6ce4-4f90-b9ee-72a88d373821"
								},
								{
									"key": "comment_id",
									"value": "0ea7d4a8-6ce4-4f90-b9ee-72a88d373821"
								}
							]
						},
						"description": "get a specific comment. </br>\nIf the comment is a parent comment, then both parent_id and comment_id shall be the same. </br>\nIf comment is a child comment, then parent_id of the parent comment is required."
					},
					"response": []
				},
				{
					"name": "post comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orb_uuid\": \"1234\",\n    \"user_id\": 12345,\n    \"comment\": \"hello there\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/comment/post",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"comment",
								"post"
							]
						},
						"description": "post a PARENT comment"
					},
					"response": []
				},
				{
					"name": "post comment reply",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"parent_id\": \"4be3759f-e91f-4aab-ba39-7ca2fefc5e25\",\n    \"user_id\": 123456,\n    \"comment\": \"Thank you!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/comment/postReply",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"comment",
								"postReply"
							]
						},
						"description": "Post a child comment"
					},
					"response": []
				},
				{
					"name": "delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"parent_id\": \"0ea7d4a8-6ce4-4f90-b9ee-72a88d373821\",\n    \"comment_id\": \"0ea7d4a8-6ce4-4f90-b9ee-72a88d373821\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/comment/delete",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"comment",
								"delete"
							]
						},
						"description": "this is a soft delete, so comment will still be available in database."
					},
					"response": []
				}
			]
		},
		{
			"name": "0. Post ORB",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"user_id\": 1236,\n    \"username\": \"Passerby A\",\n    \"title\": \"tes2\",\n    \"info\": \"nil\",\n    \"where\": \"my house\",\n    \"when\": \"now\",\n    \"tip\": \"foc\",\n    \"tags\": [\"free\", \"christmas\"],\n    \"photo\": \"www.pic.com\",\n    \"nature\": 10021000000, \n    \"postal_code\": 659921,\n    \"expires_in\": 30\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/post_orb",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"post_orb"
					]
				},
				"description": "expires_in: \"1 day\" | \"3 day\" | \"1 week\" | \"1 month\" </br>\nuser_id = telegram ID </br>\nusername: string </br>\ntitle: string </br>\ninfo: string </br>\nwhere: string </br>\nwhen: string </br>\ntip: string </br>\ntags: array of strings </br>\nphoto </br>\nnature: 100 OFFER, 200 REQUEST, 300 BROADCAST </br>\npostal_code: **postal code has to be correct! </br>"
			},
			"response": []
		},
		{
			"name": "1. Register user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 9866730476,\n    \"username\": \"bala\",\n    \"bio\": \"Bye\",\n    \"profile_pic\": \"www.pic.com\",\n    \"verified\": 1,\n    \"home\": 659921,\n    \"office\": 640646,\n    \"country_code\": 65,\n    \"hp_number\": 14667887656,\n    \"gender\": \"nil\",\n    \"birthday\": \"01-01-2000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/create_user",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"create_user"
					]
				},
				"description": "user id = telegram id </br>\nusername: string</br>\nbio: string</br>\nprofile pic </br>\nverified: 1 | 0</br>\npostal code: integer </br>\ncountry code: integer (dont have the +) </br>\nhp number: integer</br>\ngender: string</br>\nbirthday : string"
			},
			"response": []
		},
		{
			"name": "2. Accept ORB",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1234,\n    \"orb_uuid\": \"9ef8779c-9e90-468e-8c2f-2c09e864619b\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/accept",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"accept"
					]
				},
				"description": "keyword: ACCEPT | BOOKMARK | DELETE | HIDE | REPORT</br>\nallows for latlon instead of postal code </br>\nTo use latlon: </br> \n\"latlon\": { </br> \n&nbsp;&nbsp;  \"LATITUDE\": </br> \n&nbsp;&nbsp;    \"LONGITUDE\": </br> \n}</br>\nuser id:</br>\norb uuid:</br>"
			},
			"response": []
		},
		{
			"name": "3. user personal interaction with ORB",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1236,\n    \"orb_uuid\": \"1\",\n    \"action\": \"save\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/user_action",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"user_action"
					]
				},
				"description": "action: save | hide"
			},
			"response": []
		},
		{
			"name": "3. Undo user personal interaction with ORB",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1234,\n    \"orb_uuid\": \"1\",\n    \"action\": \"save\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/undo_user_action",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"undo_user_action"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Report ORB",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"orb_uuid\": \"9a69a0ea-cce6-42c3-a158-7b3e85d8908d\",\n    \"user_id\": 1234,\n    \"reason\": \"fake\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/report",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"report"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Retrieve orb",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/get?orb_uuid=1fd0405f-1aca-448b-9d3b-a55e8e30d25b",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"get"
					],
					"query": [
						{
							"key": "orb_uuid",
							"value": "1fd0405f-1aca-448b-9d3b-a55e8e30d25b"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Get all fresh orbs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/orbs_in_loc_fresh_batch?postal_code=659921",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"orbs_in_loc_fresh_batch"
					],
					"query": [
						{
							"key": "postal_code",
							"value": "659921"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Get all fresh orbs PAGE",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/orbs_in_loc_fresh_page?postal_code=659921&page=0",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"orbs_in_loc_fresh_page"
					],
					"query": [
						{
							"key": "postal_code",
							"value": "659921"
						},
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Get user's ORB profile",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/user_profile?user_id=1234&keyword=INIT",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"user_profile"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1234"
						},
						{
							"key": "keyword",
							"value": "INIT",
							"description": "INIT | ACCEPT | FULFILLED | COMPLETED"
						},
						{
							"key": "start",
							"value": "676b393d-d6c9-487a-a93b-9b6ae5502bdf",
							"disabled": true
						},
						{
							"key": "ascending",
							"value": "false",
							"description": "true by default",
							"disabled": true
						}
					]
				},
				"description": "fulfilled: acceptor fulfills another person's orb </br>\ncompleted: initiator completes his own orb"
			},
			"response": []
		},
		{
			"name": "4. Retrieve user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/get_user?user_id=1234",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"get_user"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1234"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Get ORB acceptance",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/orb_acceptance?orb_uuid=300c8c13-4da3-4ae8-9a26-d69f3f09aea2",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"orb_acceptance"
					],
					"query": [
						{
							"key": "orb_uuid",
							"value": "300c8c13-4da3-4ae8-9a26-d69f3f09aea2"
						},
						{
							"key": "start",
							"value": "1236",
							"disabled": true
						},
						{
							"key": "ascending",
							"value": "false",
							"description": "true by default",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Get user preferences ORB",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/user_pref?user_id=1236&action=save",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"user_pref"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1236"
						},
						{
							"key": "action",
							"value": "save",
							"description": "supported values: rprt, hide, save"
						},
						{
							"key": "start",
							"value": "1",
							"description": "to next page",
							"disabled": true
						},
						{
							"key": "start_time",
							"value": "1611235998",
							"description": "to next page",
							"disabled": true
						},
						{
							"key": "ascending",
							"value": "false",
							"description": "is true (ascending) by default, so oldest actions appear first",
							"disabled": true
						}
					]
				},
				"description": "actions: rprt | hide | save"
			},
			"response": []
		},
		{
			"name": "7.buddies or baddies or conmate",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/query/buddy?user_id=1234",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"query",
						"buddy"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1234"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "INIT ORB completion handshake",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"user_id\": 1234,\n    \"orb_uuid\": \"05f86450-c21e-411d-92f1-5017bd33afe3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/complete_orb",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"complete_orb"
					]
				},
				"description": "for a user to complete his orb (mark his orb as Fulfilled) </br>\nput all the info to create the orb again </br>\n    \"user_id\": </br>\n    \"orb_uuid\": </br>\n    \"username\": </br>\n    \"title\": string</br>\n    \"info\": string</br>\n    \"where\": string</br>\n    \"when\": string</br>\n    \"tip\": string</br>\n    \"tags\": array of string</br>\n    \"photo\": </br>\n    \"nature\": int</br>\n    \"postal_code\": int</br>\n    \"expires_in\": \"1 day\" | \"3 day\" | \"1 week\" | \"1 month\" </br>\n    \"expiry_dt\": int</br>\n    \"geohash\": int</br>\n    \"geohash52\": int</br>"
			},
			"response": []
		},
		{
			"name": "1. Update user",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1234,\n    \"bio\": \"bye\",\n    \"profile_pic\": \"www.pic.com\",\n    \"verified\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/update_user",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"update_user"
					]
				},
				"description": "Things that can be editted: **have to send the original data of the params which will be remain unchanged, coz everything here will be overwritten. </br>\nbio: string </br>\nprofile pic: string</br>\nverified: 1 | 0</br>\ncountry_code: int (without the +)</br>\nhp_number: int</br>\ngender: string</br>\nbirthday: string</br>"
			},
			"response": []
		},
		{
			"name": "2. Update username",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1234,\n    \"username\": \"tester1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/update_username",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"update_username"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Update user home&office",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1234,\n    \"home\": 659922,\n    \"office\": 659922\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/update_user_location",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"update_user_location"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Complete ORB (for initiator)",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"user_id\": 1234,\n    \"orb_uuid\": \"05f86450-c21e-411d-92f1-5017bd33afe3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/complete_orb",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"complete_orb"
					]
				},
				"description": "for a user to complete his orb (mark his orb as Fulfilled) </br>\nput all the info to create the orb again </br>\n    \"user_id\": </br>\n    \"orb_uuid\": </br>\n    \"username\": </br>\n    \"title\": string</br>\n    \"info\": string</br>\n    \"where\": string</br>\n    \"when\": string</br>\n    \"tip\": string</br>\n    \"tags\": array of string</br>\n    \"photo\": </br>\n    \"nature\": int</br>\n    \"postal_code\": int</br>\n    \"expires_in\": \"1 day\" | \"3 day\" | \"1 week\" | \"1 month\" </br>\n    \"expiry_dt\": int</br>\n    \"geohash\": int</br>\n    \"geohash52\": int</br>"
			},
			"response": []
		},
		{
			"name": "4. Complete ORB (for acceptor)",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"user_id\": 1234,\n    \"orb_uuid\": \"05f86450-c21e-411d-92f1-5017bd33afe3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/complete_orb_acceptor",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"complete_orb_acceptor"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Delete acceptance interaction",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"user_id\": 1236,\n    \"orb_uuid\": \"05f86450-c21e-411d-92f1-5017bd33afe3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/delete_acceptance",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"delete_acceptance"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Delete ORB",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"user_id\": 1236,\n    \"orb_uuid\": \"c2fe14ac-a808-4207-b091-9e350455cace\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/orb/delete_orb",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"orb",
						"delete_orb"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}